<?php
use Drupal\Core\Render\Element;
use Drupal\Core\Template\Attribute;
/**
 * @file
 * Functions to support theming in the ulima theme.
 */

/**
 * Implements hook_preprocess_HOOK() for Page templates.
 *
 * Override or insert variables into the page template.
 */
function ulima_preprocess_page(&$variables) {
  $variables['slideshow_display'] = theme_get_setting('slideshow_display','ulima');

  $variables['slide1_head'] = theme_get_setting('slide1_head','ulima');
  $variables['slide1_desc'] = check_markup(theme_get_setting('slide1_desc','ulima'), 'full_html');
  $variables['slide1_url'] = theme_get_setting('slide1_url','ulima');
  // slide1_image
  $fid = theme_get_setting("slide1_image", "ulima");
  if (!empty($fid)) {
    $file = \Drupal\file\Entity\File::load($fid[0]);
    $uri = $file->getFileUri();
    $image_path = file_create_url($uri);
   }
   else {
    $image_path = drupal_get_path('theme', 'ulima') . '/assets/images/slide-image-1.jpg';
   }
   $variables['slide1_image'] = $image_path;


  $variables['slide2_head'] = theme_get_setting('slide2_head','ulima');
  $variables['slide2_desc'] = check_markup(theme_get_setting('slide2_desc','ulima'), 'full_html');
  $variables['slide2_url'] = theme_get_setting('slide2_url','ulima');
  // slide2_image
  $fid = theme_get_setting("slide2_image", "ulima");
  if (!empty($fid)) {
    $file = \Drupal\file\Entity\File::load($fid[0]);
    $uri = $file->getFileUri();
    $image_path = file_create_url($uri);
   }
   else {
    $image_path = drupal_get_path('theme', 'ulima') . '/assets/images/slide-image-2.jpg';
   }
   $variables['slide2_image'] = $image_path;

  $variables['slide3_head'] = theme_get_setting('slide3_head','ulima');
  $variables['slide3_desc'] = check_markup(theme_get_setting('slide3_desc','ulima'), 'full_html');
  $variables['slide3_url'] = theme_get_setting('slide3_url','ulima');
  // slide3_image
  $fid = theme_get_setting("slide3_image", "ulima");
  if (!empty($fid)) {
    $file = \Drupal\file\Entity\File::load($fid[0]);
    $uri = $file->getFileUri();
    $image_path = file_create_url($uri);
   }
   else {
    $image_path =  drupal_get_path('theme', 'ulima') . '/assets/images/slide-image-3.jpg';
   }
   $variables['slide3_image'] = $image_path;

  $variables['this_year']= date('Y');

  $variables['preface_col'] = ( ( (bool) $variables['page']['preface_first'] + (bool) $variables['page']['preface_second'] + (bool) $variables['page']['preface_third'] ) );
  $variables['preface_col'] = ($variables['preface_col'] > 0)
    ? (12 / $variables['preface_col']) : 0;

  $variables['footer_col'] = ( ( (bool) $variables['page']['footer_first'] + (bool) $variables['page']['footer_second'] + (bool) $variables['page']['footer_third'] + (bool) $variables['page']['footer_fourth'] ) );
  $variables['footer_col'] = ($variables['footer_col'] > 0)
    ? (12 / $variables['footer_col']) : 0;


}

/**
 * Prepares variables for comment templates.
 *
 * Default template: comment.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the comment and entity objects.
 *     Array keys: #comment, #commented_entity.
 */
function ulima_preprocess_breadcrumb(&$variables) {
  // Set cache context as 'URL'.
  $variables['#cache']['contexts'][] = 'url';

  // Set breadcrumb.
  if(($node = \Drupal::routeMatch()->getParameter('node')) && $variables['breadcrumb']){
    $variables['breadcrumb'][] = array(
      'text' => $node->getTitle(),
      'url' => $node->URL()
   );
  }
}



/**
 * Prepares variables for node templates.
 *
 * Default template: node.html.twig.
 *
 * Most themes use their own copy of node.html.twig. The default is located
 * inside "/core/modules/node/templates/node.html.twig". Look in there for the
 * full list of variables.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 *   - node: The node object.
 *   - view_mode: View mode; e.g., 'full', 'teaser', etc.
 */
function ulima_preprocess_node(&$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Provide a distinct $teaser boolean.
  $variables['teaser'] = $variables['view_mode'] == 'teaser';
  $variables['node'] = $variables['elements']['#node'];
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];
  $variables['date'] = \Drupal::service('renderer')->render($variables['elements']['created']);
  unset($variables['elements']['created']);
  $variables['author_name'] = \Drupal::service('renderer')->render($variables['elements']['uid']);
  unset($variables['elements']['uid']);

  $variables['url'] = $node->url('canonical', [
    'language' => $node->language(),
  ]);
  $variables['label'] = $variables['elements']['title'];
  unset($variables['elements']['title']);
  // The 'page' variable is set to TRUE in two occasions:
  //   - The view mode is 'full' and we are on the 'node.view' route.
  //   - The node is in preview and view mode is either 'full' or 'default'.
  $variables['page'] = ($variables['view_mode'] == 'full' && (node_is_page($node)) || (isset($node->in_preview) && in_array($node->preview_view_mode, ['full', 'default'])));

  // Helpful $content variable for templates.
  $variables += ['content' => []];
  foreach (Element::children($variables['elements']) as $key) {
    //$variables['content'][$key] = ulima_bloque_dinamicos($variables['elements'][$key], $key);
    $variables['content'][$key] = $variables['elements'][$key];
  }

  // Display post information only on certain node types.
  $node_type = $node->type->entity;
  // Used by RDF to add attributes around the author and date submitted.
  $variables['author_attributes'] = new Attribute();
  $variables['display_submitted'] = $node_type->displaySubmitted();
  if ($variables['display_submitted']) {
    if (theme_get_setting('features.node_user_picture')) {
      // To change user picture settings (e.g. image style), edit the 'compact'
      // view mode on the User entity. Note that the 'compact' view mode might
      // not be configured, so remember to always check the theme setting first.
      $variables['author_picture'] = user_view($node->getOwner(), 'compact');
    }
  }

  // Add article ARIA role.
  $variables['attributes']['role'] = 'article';
}

function ulima_bloque_dinamicos($content, $key){
//print_r($key); exit;
	if($key == 'field_bloque_3'){
		return ulima_bloque_3($content);
	}

	return $content;

}

function ulima_bloque_3($content){
$node = $content['#object'];
	print_r($node->field_bloque_3); exit;

}


function ulima_js_alter(&$javascript) {
  
  $route = \Drupal::routeMatch()->getRouteObject();

  $is_admin = FALSE;
  if (!empty($route)) {
    $is_admin_route = \Drupal::service('router.admin_context')->isAdminRoute($route);
    $has_node_operation_option = $route->getOption('_node_operation_route');
    $is_admin = ($is_admin_route || $has_node_operation_option);
  }
  else {
    $current_path = \Drupal::service('path.current')->getPath();
    if(preg_match('/node\/(\d+)\/edit/', $current_path, $matches)) {
      $is_admin = TRUE;
    }
    elseif(preg_match('/taxonomy\/term\/(\d+)\/edit/', $current_path, $matches)) {
      $is_admin = TRUE;
    }
  }
  if(!$is_admin){
    unset($javascript['core/assets/vendor/domready/ready.min.js']);
    unset($javascript['core/assets/vendor/jquery/jquery.min.js']);
    unset($javascript['core/assets/vendor/jquery-once/jquery.once.min.js']);
    unset($javascript['core/misc/drupalSettingsLoader.js']);
    unset($javascript['sites/default/files/languages/es_K-8Zy0ChDxz8uOjIS80rqw3MV9QNSTGBlnX8FIq6Eew.js']);
    unset($javascript['core/misc/drupal.js']);
    unset($javascript['core/misc/drupal.init.js']);
    //unset($javascript['themes/ulima/assets/js/main.bundle.js']);
    unset($javascript['core/misc/progress.js']);
    unset($javascript['core/misc/ajax.js']);
    unset($javascript['core/modules/big_pipe/js/big_pipe.js']);
}
    unset($javascript['core/assets/vendor/html5shiv/html5shiv.min.js']);
}
